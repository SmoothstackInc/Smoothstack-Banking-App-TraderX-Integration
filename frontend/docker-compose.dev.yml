version: '3.8'
services:
  react-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ./:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - api-gateway
    ports:
      - '5173:5173'
  api-gateway:
    container_name: api.gateway
    build:
      context: C:\Users\excod\Desktop\Accounts_Microservice\apigateway
      dockerfile: Dockerfile
    environment:
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka
    ports:
      - '8765:8765'
    depends_on:
      - eureka-server
      - user-service
  eureka-server:
    build:
      context: C:\Users\excod\Desktop\Accounts_Microservice\eurekaserver
      dockerfile: Dockerfile
    ports:
      - '8761:8761'
  user-service:
    build:
      context: C:\Users\excod\Desktop\Accounts_Microservice\userservice
      dockerfile: Dockerfile
    environment:
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:postgresql://users-db:5432/users_service_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SECRET_KEY=UiynOe89DRPIBdPzuyiQ90FN4skkGOkGUO+aqW8ks3c=
    depends_on:
      - eureka-server
      - users-db

  users-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: users_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - users-db-data:/var/lib/postgresql/data
      - ./user-service-init:/docker-entrypoint-initdb.d

volumes:
  users-db-data:
